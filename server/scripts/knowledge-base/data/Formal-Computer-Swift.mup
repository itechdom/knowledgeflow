{
  "id": "root",
  "formatVersion": 3,
  "ideas": {
    "1": {
      "id": 1,
      "title": "Swift",
      "attr": {
        "style": {}
      },
      "ideas": {
        "14": {
          "title": "Concepts",
          "id": 176,
          "ideas": {
            "11": {
              "title": "Language Features",
              "id": "315.5bd456f00c29b976",
              "ideas": {
                "1": {
                  "title": "functions",
                  "id": 283,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_functions.htm",
                      "id": 284
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "2": {
                  "title": "closures",
                  "id": 285,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_closures.htm",
                      "id": 286
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "3": {
                  "title": "properties",
                  "id": 287,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_properties.htm",
                      "id": 288
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "4": {
                  "title": "ARC",
                  "id": 289,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_deinitialization.htm",
                      "id": 290
                    },
                    "2": {
                      "title": "http://www.tutorialspoint.com/swift/swift_automatic_reference_counting.htm",
                      "id": 291
                    }
                  },
                  "attr": {
                    "style": {},
                    "collapsed": true
                  }
                },
                "5": {
                  "title": "subscript",
                  "id": 292,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_subscripts.htm",
                      "id": 293
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "6": {
                  "title": "extensions",
                  "id": 294,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_extensions.htm",
                      "id": 295
                    },
                    "2": {
                      "title": "Convenient way to add extra methods to classes",
                      "id": "309.18ca7b88d4276361"
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "7": {
                  "title": "protocols",
                  "id": 296,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_protocols.htm",
                      "id": 297
                    },
                    "2": {
                      "title": "Like interfaces?",
                      "id": "307.18ca7b88d4276361"
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "8": {
                  "title": "generics",
                  "id": 298,
                  "ideas": {
                    "1": {
                      "title": "http://www.tutorialspoint.com/swift/swift_generics.htm",
                      "id": 299
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "9": {
                  "title": "optional chaining",
                  "id": 300,
                  "attr": {}
                },
                "10": {
                  "title": "core libraries",
                  "id": 305,
                  "ideas": {
                    "1": {
                      "title": "https://swift.org/core-libraries/#libdispatch",
                      "id": 306
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "12": {
                  "title": "Variables",
                  "id": "320.5bd456f00c29b976",
                  "ideas": {
                    "1": {
                      "title": "Let",
                      "id": "321.5bd456f00c29b976",
                      "ideas": {
                        "1": {
                          "title": "Immutable",
                          "id": "333.5bd456f00c29b976"
                        }
                      }
                    },
                    "2": {
                      "title": "Var",
                      "id": "322.5bd456f00c29b976",
                      "ideas": {
                        "1": {
                          "title": "Mutable",
                          "id": "336.5bd456f00c29b976"
                        }
                      }
                    },
                    "5": {
                      "title": "Optionals",
                      "id": "328.5bd456f00c29b976",
                      "ideas": {
                        "1": {
                          "title": "Because Swift requires every property to have a value, even nil must be\nexplicitly stored as an Optional value.",
                          "id": "324.5bd456f00c29b976",
                          "attr": {}
                        },
                        "2": {
                          "title": "can be nil with a question mark",
                          "id": "325.5bd456f00c29b976",
                          "ideas": {
                            "1": {
                              "title": "var someOptionalString: String? = \"optional\" // Can be nil",
                              "id": "326.5bd456f00c29b976"
                            }
                          },
                          "attr": {
                            "collapsed": true
                          }
                        },
                        "3": {
                          "title": "Implicitly Unwrapped Optional Value",
                          "id": "330.5bd456f00c29b976"
                        }
                      },
                      "attr": {
                        "collapsed": true
                      }
                    },
                    "6": {
                      "title": "Type Inference",
                      "id": "319.5bd456f00c29b976",
                      "attr": {}
                    },
                    "7": {
                      "title": "Primitive Vs. Class Types",
                      "id": "331.5bd456f00c29b976"
                    },
                    "8": {
                      "title": "You can use any unicode",
                      "id": "337.5bd456f00c29b976"
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "13": {
                  "title": "Conditionals / Control Flow",
                  "id": "327.5bd456f00c29b976",
                  "ideas": {
                    "1": {
                      "title": "if let",
                      "id": "329.5bd456f00c29b976"
                    }
                  },
                  "attr": {
                    "collapsed": true
                  }
                },
                "14": {
                  "title": "Structs",
                  "id": "332.5bd456f00c29b976"
                }
              }
            },
            "12": {
              "title": "iOS",
              "id": "310.2428a0c4e9add946",
              "attr": {
                "style": {
                  "width": 50
                }
              },
              "ideas": {
                "1": {
                  "title": "Foundation Framework",
                  "id": "316.5bd456f00c29b976"
                },
                "2": {
                  "title": "UI Kit",
                  "id": "323.5bd456f00c29b976"
                }
              }
            }
          },
          "attr": {
            "style": {}
          }
        },
        "-3": {
          "title": "Resources",
          "id": 258,
          "attr": {
            "style": {}
          },
          "ideas": {
            "1": {
              "title": "http://codewithchris.com/learn-swift-from-objective-c/",
              "id": 259,
              "ideas": {
                "1": {
                  "title": "Program swift from objective-c",
                  "id": 260
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "2": {
              "title": "Tutorials Point",
              "id": 239,
              "ideas": {
                "1": {
                  "title": "http://www.tutorialspoint.com/swift/",
                  "id": 240,
                  "attr": {}
                }
              },
              "attr": {
                "style": {}
              }
            },
            "3": {
              "title": "Meta resource",
              "id": 271,
              "ideas": {
                "1": {
                  "title": "https://github.com/vsouza/awesome-ios",
                  "id": 272
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "4": {
              "title": "Functonal Programming",
              "id": 273,
              "attr": {
                "style": {},
                "note": {
                  "text": "Functional Programming\n\n[Forbind](https://github.com/ulrikdamm/Forbind)&nbsp;- Functional chaining and promises in Swift.&nbsp;\n\n[Funky](https://github.com/brynbellomy/Funky)&nbsp;- Functional programming tools and experiments in Swift.&nbsp;\n\n[LlamaKit](https://github.com/LlamaKit/LlamaKit)&nbsp;- Collection of must-have functional Swift tools.&nbsp;\n\n[Oriole](https://github.com/tptee/Oriole)&nbsp;- A functional utility belt implemented as Swift 2.0 protocol extensions.&nbsp;[e]\n\n[Prelude](https://github.com/robrix/Prelude)&nbsp;- Swift µframework of simple functional programming tools.&nbsp;\n\n[Swiftx](https://github.com/typelift/Swiftx)&nbsp;- Functional data types and functions for any project.&nbsp;\n\n[Swiftz](https://github.com/typelift/Swiftz)&nbsp;- Functional programming in Swift.&nbsp;\n\n[OptionalExtensions](https://github.com/RuiAAPeres/OptionalExtensions)&nbsp;- Swift µframework with extensions for the Optional Type.&nbsp;[e]\n\n[Hookah](https://github.com/HookahSwift/Hookah)&nbsp;- Hookah is a functional library for Swift. It's inspired by LoDash, Underscore project.&nbsp;\n\n[Argo](https://github.com/thoughtbot/Argo)&nbsp;- Functional JSON parsing library for Swift&nbsp;"
                }
              }
            },
            "5": {
              "title": "Style guide",
              "id": 275,
              "ideas": {
                "1": {
                  "title": "https://github.com/github/swift-style-guide",
                  "id": 276
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "6": {
              "title": "https://swift.org/",
              "id": 301,
              "ideas": {}
            },
            "7": {
              "title": "https://swift.org/documentation/#api-design-guidelines",
              "id": 302,
              "attr": {
                "style": {}
              }
            },
            "9": {
              "title": "Project Starters",
              "id": 233,
              "ideas": {
                "3": {
                  "title": "Simple Example",
                  "id": "311.2428a0c4e9add946",
                  "ideas": {
                    "1": {
                      "title": "https://github.com/Ruenzuo/ios-swift-example",
                      "id": "312.2428a0c4e9add946"
                    }
                  }
                },
                "4": {
                  "title": "Open Source iOS Apps",
                  "id": "313.2428a0c4e9add946",
                  "ideas": {
                    "1": {
                      "title": "https://github.com/dkhamsing/open-source-ios-apps",
                      "id": "314.2428a0c4e9add946"
                    }
                  }
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "10": {
              "title": "Third party",
              "id": 261,
              "ideas": {
                "1": {
                  "title": "material ",
                  "id": 262,
                  "ideas": {
                    "1": {
                      "title": "https://github.com/nghialv/MaterialKit",
                      "id": 264
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                },
                "2": {
                  "title": "Web server",
                  "id": 266,
                  "ideas": {
                    "1": {
                      "title": "https://github.com/elliottminns/blackfish",
                      "id": 267
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                },
                "4": {
                  "title": "Rx in Swift",
                  "id": 270,
                  "ideas": {
                    "1": {
                      "title": "https://github.com/ReactiveX/RxSwift",
                      "id": 268,
                      "ideas": {},
                      "attr": {
                        "style": {}
                      }
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                },
                "5": {
                  "title": "layout",
                  "id": 274,
                  "attr": {
                    "attachment": {
                      "contentType": "text/html",
                      "content": "<h3 style=\"box-sizing: border-box; margin-top: 1em; margin-bottom: 16px; line-height: 1.43; font-size: 1.5em; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\">Layout</h3><ul style=\"box-sizing: border-box; padding-left: 2em; margin-bottom: 16px; font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; line-height: 25.6px;\"><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/alexdrone/ios-flexboxkit\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">ios-flexboxkit</a>&nbsp;- A simple UIKit extension to wrap Flexbox layouts.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/SnapKit/Masonry\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Masonry</a>&nbsp;- Harness the power of AutoLayout NSLayoutConstraints with a simplified, chainable and expressive syntax.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/floriankugler/FLKAutoLayout\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">FLKAutoLayout</a>&nbsp;- UIView category which makes it easy to create layout constraints in code.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/mamaral/Facade\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Façade</a>&nbsp;- Programmatic view layout for the rest of us - an autolayout alternative.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/PureLayout/PureLayout\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">PureLayout</a>&nbsp;- The ultimate API for iOS &amp; OS X Auto Layout — impressively simple, immensely powerful. Objective-C and Swift compatible.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/SnapKit/SnapKit\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">SnapKit</a>&nbsp;- A Swift Autolayout DSL for iOS &amp; OS X.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/robb/Cartography\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Cartography</a>&nbsp;- A declarative Auto Layout DSL for Swift&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/ruipfcosta/AutoLayoutPlus\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">AutoLayoutPlus</a>&nbsp;- A bit of steroids for AutoLayout, powered by Swift.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/mamaral/Neon\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Neon</a>&nbsp;- A powerful Swift programmatic UI layout framework.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/szk-atmosphere/MisterFusion\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">MisterFusion</a>&nbsp;- A Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C.</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/joshaber/SwiftBox\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">SwiftBox</a>&nbsp;- Flexbox in Swift, using Facebook's css-layout.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/isair/ManualLayout\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">ManualLayout</a>&nbsp;- Easy to use and flexible library for manually laying out views and layers for iOS and tvOS. Supports AsyncDisplayKit.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\">[e]</li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/s4cha/Stevia\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Stevia</a>&nbsp;- Elegant view layout for iOS.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li><li style=\"box-sizing: border-box;\"><a href=\"https://github.com/floriankrueger/Manuscript\" style=\"box-sizing: border-box; color: rgb(64, 120, 192); background-color: transparent;\">Manuscript</a>&nbsp;- AutoLayoutKit in pure Swift.&nbsp;<img class=\"emoji\" title=\":large_orange_diamond:\" alt=\":large_orange_diamond:\" src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f536.png\" height=\"20\" width=\"20\" align=\"absmiddle\" style=\"box-sizing: content-box; max-width: none; background-color: transparent;\"></li></ul>"
                    },
                    "style": {}
                  }
                },
                "6": {
                  "title": "Package Manager",
                  "id": 277,
                  "ideas": {
                    "1": {
                      "title": "https://github.com/apple/swift-package-manager",
                      "id": 278,
                      "ideas": {
                        "1": {
                          "title": "in development",
                          "id": 279
                        }
                      }
                    },
                    "2": {
                      "title": "https://cocoapods.org/",
                      "id": 281,
                      "ideas": {
                        "1": {
                          "title": "obj-c and swift package manager",
                          "id": 282
                        }
                      }
                    },
                    "3": {
                      "title": "https://swift.org/package-manager/",
                      "id": 303,
                      "ideas": {
                        "1": {
                          "title": "swift package manager",
                          "id": 304
                        }
                      }
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "11": {
              "title": "https://learnxinyminutes.com/docs/swift/",
              "id": "317.5bd456f00c29b976"
            }
          }
        }
      }
    }
  },
  "links": [],
  "attr": {},
  "title": "Swift"
}