{
  "id": "root",
  "formatVersion": 3,
  "ideas": {
    "1": {
      "id": 1,
      "title": "Software Development Career",
      "attr": {
        "style": {},
        "attachment": {
          "contentType": "text/html",
          "content": "Relies Heavily on concepts from Computer Science"
        }
      },
      "ideas": {
        "0.5": {
          "title": "Concepts",
          "id": 144,
          "ideas": {
            "4": {
              "title": "Design Patterns",
              "id": 148,
              "ideas": {
                "5": {
                  "title": "Architectural patterns",
                  "id": 181,
                  "ideas": {
                    "1": {
                      "title": "https://en.m.wikipedia.org/wiki/Architectural_pattern",
                      "id": 184,
                      "ideas": {
                        "1": {
                          "title": "Has all archetictural patterns",
                          "id": 185
                        }
                      }
                    }
                  },
                  "attr": {
                    "attachment": {
                      "contentType": "text/html",
                      "content": "<div style=\"margin: 0px; padding: 0px; border: 0px; font-family: 'Helvetica Neue', Helvetica, 'Nimbus Sans L', Arial, 'Liberation Sans', sans-serif; font-size: 16px; font-stretch: inherit; line-height: 26.3999996185303px; vertical-align: baseline; color: rgb(37, 37, 37); background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\"><p style=\"margin-top: 0.5em; margin-bottom: 1em; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; background: none;\">An&nbsp;<b style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; background: none;\">architectural pattern</b>&nbsp;is a general, reusable solution to a commonly occurring problem in<a href=\"https://en.m.wikipedia.org/wiki/Software_architecture\" title=\"Software architecture\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">software architecture</a>&nbsp;within a given context.<sup id=\"cite_ref-TMD_1-0\" class=\"reference\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: 0.75em; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: 1; vertical-align: super; background: none;\"><a href=\"https://en.m.wikipedia.org/wiki/Architectural_pattern#cite_note-TMD-1\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); white-space: nowrap; background: none;\"><span style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; background: none;\">[</span>1<span style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; background: none;\">]</span></a></sup>Architectural patterns are similar to software&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/Design_pattern_(computer_science)\" title=\"Design pattern (computer science)\" class=\"mw-redirect\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">design patterns</a>&nbsp;but have a broader scope. The architectural patterns address various issues in&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/Software_engineering\" title=\"Software engineering\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">software engineering</a>, such as&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/Computer_hardware\" title=\"Computer hardware\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">computer hardware</a>performance limitations,&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/High_availability\" title=\"High availability\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">high availability</a>&nbsp;and minimization of a&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/Business_risk\" title=\"Business risk\" class=\"mw-redirect\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">business risk</a>. Some architectural patterns have been implemented within&nbsp;<a href=\"https://en.m.wikipedia.org/wiki/Software_framework\" title=\"Software framework\" style=\"margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; color: rgb(90, 54, 150); background: none;\">software frameworks</a>.</p><div><br></div><p style=\"margin-top: 0.5em; margin-bottom: 1em; padding: 0px; border: 0px; font-family: inherit; font-size: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; background: none;\"></p></div><h2 class=\"section-heading collapsible-heading\" tabindex=\"0\" aria-haspopup=\"true\" aria-controls=\"content-collapsible-block-0\" style=\"margin-top: 0px; margin-bottom: 0.5em; padding: 0.5em 0px; border-width: 0px 0px 1px; border-bottom-style: solid; border-bottom-color: rgb(226, 227, 228); font-family: 'Linux Libertine', Georgia, Times, serif; font-size: 1.5em; font-weight: inherit; font-stretch: inherit; line-height: 1.3; vertical-align: baseline; clear: both; display: table; cursor: pointer; position: relative; color: rgb(37, 37, 37); background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;\"></h2>"
                    },
                    "style": {}
                  }
                },
                "6": {
                  "title": "Design patterns",
                  "id": 183,
                  "ideas": {
                    "1": {
                      "title": "https://sourcemaking.com/design_patterns",
                      "id": 152,
                      "ideas": {
                        "1": {
                          "title": "Comprehensive list of all patterns in software",
                          "id": 153
                        }
                      },
                      "attr": {
                        "style": {}
                      }
                    },
                    "2": {
                      "title": "Dependency injection",
                      "id": 186,
                      "ideas": {
                        "1": {
                          "title": "http://stackoverflow.com/questions/130794/what-is-dependency-injection",
                          "id": 187,
                          "attr": {
                            "style": {}
                          }
                        }
                      }
                    }
                  },
                  "attr": {
                    "style": {}
                  }
                }
              },
              "attr": {
                "attachment": {
                  "contentType": "text/html",
                  "content": "<h1 class=\"title\" style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 24px; font-size: 64px; line-height: 56px; color: rgb(68, 68, 68); font-family: 'PT Sans', sans-serif;\">Design Patterns</h1><div class=\"content\" style=\"box-sizing: border-box; margin: 0px; color: rgb(68, 68, 68); font-family: 'PT Sans', sans-serif; font-size: 16px; line-height: 22.3999996185303px;\"><p class=\"ebook_ignore\" style=\"box-sizing: border-box; margin-bottom: 16px;\">In software engineering, a&nbsp;<span style=\"box-sizing: border-box; margin: 0px; font-weight: 700;\">design pattern</span>&nbsp;is a general repeatable solution to a commonly occurring problem in software design. A design pattern isn't a finished design that can be transformed directly into code. It is a description or template for how to solve a problem that can be used in many different situations.</p><h3 class=\"ebook_ignore\" style=\"box-sizing: border-box; margin-top: 32px; margin-bottom: 8px; font-size: 28px; line-height: 32px;\">Uses of Design Patterns</h3><p style=\"box-sizing: border-box; margin-bottom: 16px;\">Design patterns can speed up the development process by providing tested, proven development paradigms. Effective software design requires considering issues that may not become visible until later in the implementation. Reusing design patterns helps to prevent subtle issues that can cause major problems and improves code readability for coders and architects familiar with the patterns.</p><p style=\"box-sizing: border-box; margin-bottom: 16px;\">Often, people only understand how to apply certain software design techniques to certain problems. These techniques are difficult to apply to a broader range of problems. Design patterns provide general solutions, documented in a format that doesn't require specifics tied to a particular problem.</p><p style=\"box-sizing: border-box; margin-bottom: 16px;\">In addition, patterns allow developers to communicate using well-known, well understood names for software interactions. Common design patterns can be improved over time, making them more robust than ad-hoc designs.</p><h3 style=\"box-sizing: border-box; margin-top: 32px; margin-bottom: 8px; font-size: 28px; line-height: 32px;\"><a href=\"https://sourcemaking.com/design_patterns/creational_patterns\" style=\"box-sizing: border-box; margin: 0px; color: rgb(68, 68, 68); transition: 0.25s; border-bottom-style: dotted; border-bottom-width: 1px; border-bottom-color: rgb(68, 68, 68); background: 0px 0px;\">Creational design patterns</a></h3><p style=\"box-sizing: border-box; margin-bottom: 16px;\">These design patterns are all about class instantiation. This pattern can be further divided into class-creation patterns and object-creational patterns. While class-creation patterns use inheritance effectively in the instantiation process, object-creation patterns use delegation effectively to get the job done.</p><div class=\"ebook_ignore\" style=\"box-sizing: border-box; margin: 0px; float: right; width: 225px;\"><a href=\"https://sourcemaking.com/design_patterns/abstract_factory\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\"><img src=\"https://sourcemaking.com/files/v2/content/patterns/Abstract_Factory_example1.svg\" alt=\"Example of Abstract Factory\" style=\"box-sizing: border-box; margin: 0px;\"></a></div><ul style=\"box-sizing: border-box; margin-bottom: 16px; margin-left: 0px; padding-left: 21px;\"><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/abstract_factory\" title=\"Provides a way to encapsulate a group of individual factories that have a common theme.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Abstract Factory</a><br style=\"box-sizing: border-box; margin: 0px;\">Creates an instance of several families of classes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/builder\" title=\"Separate the construction of a complex object from its representation so that the same construction process can create different representations.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Builder</a><br style=\"box-sizing: border-box; margin: 0px;\">Separates object construction from its representation</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/factory_method\" title=\"Defines a separate method for creating the objects, which subclasses can then override to specify the derived type of product that will be created.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Factory Method</a><br style=\"box-sizing: border-box; margin: 0px;\">Creates an instance of several derived classes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/object_pool\" title=\"Avoid expensive acquisition and release of resources by recycling objects that are no longer in use\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Object Pool</a><br style=\"box-sizing: border-box; margin: 0px;\">Avoid expensive acquisition and release of resources by recycling objects that are no longer in use</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/prototype\" title=\"Being cloned to produce new objects.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Prototype</a><br style=\"box-sizing: border-box; margin: 0px;\">A fully initialized instance to be copied or cloned</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/singleton\" title=\"Restricts instantiation of a class to one object.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Singleton</a><br style=\"box-sizing: border-box; margin: 0px;\">A class of which only a single instance can exist</li></ul><h3 style=\"box-sizing: border-box; margin-top: 32px; margin-bottom: 8px; font-size: 28px; line-height: 32px;\"><a href=\"https://sourcemaking.com/design_patterns/structural_patterns\" style=\"box-sizing: border-box; margin: 0px; color: rgb(68, 68, 68); transition: 0.25s; border-bottom-style: dotted; border-bottom-width: 1px; border-bottom-color: rgb(68, 68, 68); background: 0px 0px;\">Structural design patterns</a></h3><p style=\"box-sizing: border-box; margin-bottom: 16px;\">These design patterns are all about Class and Object composition. Structural class-creation patterns use inheritance to compose interfaces. Structural object-patterns define ways to compose objects to obtain new functionality.</p><div class=\"ebook_ignore\" style=\"box-sizing: border-box; margin: 0px; float: right; width: 225px;\"><a href=\"https://sourcemaking.com/design_patterns/decorator\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\"><img src=\"https://sourcemaking.com/files/v2/content/patterns/Decorator_example.svg\" alt=\"\" style=\"box-sizing: border-box; margin: 0px;\"></a></div><ul style=\"box-sizing: border-box; margin-bottom: 16px; margin-left: 0px; padding-left: 21px;\"><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/adapter\" title=\"Adapts one interface for a class into one that a client expects.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Adapter</a><br style=\"box-sizing: border-box; margin: 0px;\">Match interfaces of different classes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/bridge\" title=\"Decouples an abstraction from its implementation so that the two can vary independently.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Bridge</a><br style=\"box-sizing: border-box; margin: 0px;\">Separates an object’s interface from its implementation</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/composite\" title=\"Designed as a composition of one-or-more similar objects, all exhibiting similar functionality.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Composite</a><br style=\"box-sizing: border-box; margin: 0px;\">A tree structure of simple and composite objects</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/decorator\" title=\"Allows new/additional behavior to be added to an existing method of an object dynamically.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Decorator</a><br style=\"box-sizing: border-box; margin: 0px;\">Add responsibilities to objects dynamically</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/facade\" title=\"Provides a simplified interface to a larger body of code.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Facade</a><br style=\"box-sizing: border-box; margin: 0px;\">A single class that represents an entire subsystem</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/flyweight\" title=\"When many objects must be manipulated and these cannot afford to have extraneous data, flyweight is appropriate.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Flyweight</a><br style=\"box-sizing: border-box; margin: 0px;\">A fine-grained instance used for efficient sharing</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><div class=\"ebook_ignore\" style=\"box-sizing: border-box; margin: 0px; float: right; width: 218.6875px;\"><a href=\"https://sourcemaking.com/design_patterns/proxy\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\"><img src=\"https://sourcemaking.com/files/v2/content/patterns/Proxy_example1.svg\" alt=\"\" style=\"box-sizing: border-box; margin: 0px;\"></a></div><a href=\"https://sourcemaking.com/design_patterns/private_class_data\" title=\"Restricts accessor/mutator access\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Private Class Data</a><br style=\"box-sizing: border-box; margin: 0px;\">Restricts accessor/mutator access</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/proxy\" title=\"Class functioning as an interface to another thing.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Proxy</a><br style=\"box-sizing: border-box; margin: 0px;\">An object representing another object</li></ul><h3 style=\"box-sizing: border-box; margin-top: 32px; margin-bottom: 8px; font-size: 28px; line-height: 32px;\"><a href=\"https://sourcemaking.com/design_patterns/behavioral_patterns\" style=\"box-sizing: border-box; margin: 0px; color: rgb(68, 68, 68); transition: 0.25s; border-bottom-style: dotted; border-bottom-width: 1px; border-bottom-color: rgb(68, 68, 68); background: 0px 0px;\">Behavioral design patterns</a></h3><p style=\"box-sizing: border-box; margin-bottom: 16px;\">These design patterns are all about Class's objects communication. Behavioral patterns are those patterns that are most specifically concerned with communication between objects.</p><div class=\"ebook_ignore\" style=\"box-sizing: border-box; margin: 0px; float: right; width: 225px;\"><a href=\"https://sourcemaking.com/design_patterns/interpreter\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\"><img src=\"https://sourcemaking.com/files/v2/content/patterns/Interpreter_example1.svg\" alt=\"\" style=\"box-sizing: border-box; margin: 0px;\"></a></div><ul style=\"box-sizing: border-box; margin-bottom: 16px; margin-left: 0px; padding-left: 21px;\"><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/chain_of_responsibility\" title=\"Source of command objects and a series of processing objects.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Chain of responsibility</a><br style=\"box-sizing: border-box; margin: 0px;\">A way of passing a request between a chain of objects</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/command\" title=\"Objects are used to represent actions.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Command</a><br style=\"box-sizing: border-box; margin: 0px;\">Encapsulate a command request as an object</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/interpreter\" title=\"The basic idea is to implement a specialized computer language to rapidly solve a defined class of problems.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Interpreter</a><br style=\"box-sizing: border-box; margin: 0px;\">A way to include language elements in a program</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/iterator\" title=\"Used to access the elements of an aggregate object sequentially without exposing its underlying representation.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Iterator</a><br style=\"box-sizing: border-box; margin: 0px;\">Sequentially access the elements of a collection</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/mediator\" title=\"Provides a unified interface to a set of interfaces in a subsystem.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Mediator</a><br style=\"box-sizing: border-box; margin: 0px;\">Defines simplified communication between classes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/memento\" title=\"Provides the ability to restore an object to its previous state.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Memento</a><br style=\"box-sizing: border-box; margin: 0px;\">Capture and restore an object's internal state</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/null_object\" title=\"Designed to act as a default value of an object.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Null Object</a><br style=\"box-sizing: border-box; margin: 0px;\">Designed to act as a default value of an object</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/observer\" title=\"Observes the state of an object in a program.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Observer</a><br style=\"box-sizing: border-box; margin: 0px;\">A way of notifying change to a number of classes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><div class=\"ebook_ignore\" style=\"box-sizing: border-box; margin: 0px; float: right; width: 218.6875px;\"><a href=\"https://sourcemaking.com/design_patterns/state\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\"><img src=\"https://sourcemaking.com/files/v2/content/patterns/State_example1.svg\" alt=\"\" style=\"box-sizing: border-box; margin: 0px;\"></a></div><a href=\"https://sourcemaking.com/design_patterns/state\" title=\"Represent the state of an object.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">State</a><br style=\"box-sizing: border-box; margin: 0px;\">Alter an object's behavior when its state changes</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/strategy\" title=\"Algorithms can be selected on-the-fly at runtime.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Strategy</a><br style=\"box-sizing: border-box; margin: 0px;\">Encapsulates an algorithm inside a class</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/template_method\" title=\"A template method defines the skeleton of an algorithm.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Template method</a><br style=\"box-sizing: border-box; margin: 0px;\">Defer the exact steps of an algorithm to a subclass</li><li style=\"box-sizing: border-box; margin: 12px 0px;\"><a href=\"https://sourcemaking.com/design_patterns/visitor\" title=\"A way of separating an algorithm from an object structure.\" style=\"box-sizing: border-box; margin: 0px; color: rgb(41, 128, 185); transition: 0.25s; background: 0px 0px;\">Visitor</a><br style=\"box-sizing: border-box; margin: 0px;\">Defines a new operation to a class without change</li></ul></div>"
                },
                "style": {},
                "collapsed": true
              }
            },
            "5": {
              "title": "Paradigms",
              "id": 154,
              "ideas": {
                "1": {
                  "title": "Functional Reactive Programming",
                  "id": 147,
                  "attr": {
                    "style": {}
                  }
                },
                "2": {
                  "title": "Object Oriented Programming",
                  "id": 146,
                  "attr": {
                    "style": {}
                  }
                },
                "3": {
                  "title": "Functional Programming",
                  "id": 145,
                  "attr": {
                    "style": {}
                  }
                }
              },
              "attr": {
                "attachment": {
                  "contentType": "text/html",
                  "content": "<table class=\"vertical-navbox nowraplinks\" style=\"font-size: 12.3199996948242px; color: rgb(37, 37, 37); font-family: sans-serif; clear: right; width: 22em; margin: 0px 0px 1em 1em; border: 1px solid rgb(170, 170, 170); padding: 0.2em; -webkit-border-horizontal-spacing: 0.4em; text-align: center; line-height: 1.4em; background: rgb(249, 249, 249);\"><tbody><tr><th style=\"padding: 0.2em 0.4em; font-size: 17.8639984130859px; line-height: 1.2em;\"><a href=\"https://en.wikipedia.org/wiki/Programming_paradigm\" title=\"Programming paradigm\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Programming paradigms</a></th></tr><tr><td style=\"padding: 0px 0.1em 0.4em; text-align: left;\"><ul style=\"margin-top: 0.3em; margin-bottom: 0px; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Action_language\" title=\"Action language\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Action</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Agent-oriented_programming\" title=\"Agent-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Agent-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Array_programming\" title=\"Array programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Array-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Automata-based_programming\" title=\"Automata-based programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Automata-based</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concurrent_computing\" title=\"Concurrent computing\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concurrent computing</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Relativistic_programming\" title=\"Relativistic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Relativistic programming</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Data-driven_programming\" title=\"Data-driven programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Data-driven</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Declarative_programming\" title=\"Declarative programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Declarative</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Imperative_programming\" title=\"Imperative programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Imperative</a>)<ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Constraint_programming\" title=\"Constraint programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Constraint</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Dataflow_programming\" title=\"Dataflow programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Dataflow</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Flow-based_programming\" title=\"Flow-based programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Flow-based</a></li><li style=\"margin-bottom: 0.1em;\">Cell-oriented (<a href=\"https://en.wikipedia.org/wiki/Spreadsheet\" title=\"Spreadsheet\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">spreadsheets</a>)</li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Reactive_programming\" title=\"Reactive programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Reactive</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><span class=\"selflink\" style=\"font-weight: 700; white-space: nowrap;\">Functional</span><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Functional_logic_programming\" title=\"Functional logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Functional logic</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Logic_programming\" title=\"Logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Logic</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Abductive_logic_programming\" title=\"Abductive logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Abductive logic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Answer_set_programming\" title=\"Answer set programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Answer set</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concurrent_logic_programming\" title=\"Concurrent logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concurrent logic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Constraint_logic_programming\" title=\"Constraint logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Constraint logic</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming\" title=\"Concurrent constraint logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concurrent constraint logic</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Functional_logic_programming\" title=\"Functional logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Functional logic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Inductive_logic_programming\" title=\"Inductive logic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Inductive logic</a></li></ul></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/End-user_development\" title=\"End-user development\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">End-user programming</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Event-driven_programming\" title=\"Event-driven programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Event-driven</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Service-oriented_architecture\" title=\"Service-oriented architecture\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Service-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Time-driven_programming\" title=\"Time-driven programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Time-driven</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Expression-oriented_programming_language\" title=\"Expression-oriented programming language\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Expression-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Feature-oriented_programming\" title=\"Feature-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Feature-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Function-level_programming\" title=\"Function-level programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Function-level</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Value-level_programming\" title=\"Value-level programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Value-level</a>)</li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Generic_programming\" title=\"Generic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Generic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Imperative_programming\" title=\"Imperative programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Imperative</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Declarative_programming\" title=\"Declarative programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Declarative</a>)<ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Literate_programming\" title=\"Literate programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Literate</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Procedural_programming\" title=\"Procedural programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Procedural</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Language-oriented_programming\" title=\"Language-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Language-oriented</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Natural_language_programming\" title=\"Natural language programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Natural language programming</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Service-oriented_modeling#Discipline-specific_modeling\" title=\"Service-oriented modeling\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Discipline-specific</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Domain-specific_language\" title=\"Domain-specific language\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Domain-specific</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Grammar-oriented_programming\" title=\"Grammar-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Grammar-oriented</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Dialecting\" title=\"Dialecting\" class=\"mw-redirect\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Dialecting</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Intentional_programming\" title=\"Intentional programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Intentional</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Metaprogramming\" title=\"Metaprogramming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Metaprogramming</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Automatic_programming\" title=\"Automatic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Automatic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\" title=\"Reflection (computer programming)\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Reflective</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Attribute-oriented_programming\" title=\"Attribute-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Attribute-oriented</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Homoiconicity\" title=\"Homoiconicity\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Homoiconic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Template_metaprogramming\" title=\"Template metaprogramming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Template</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Policy-based_design\" title=\"Policy-based design\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Policy-based</a></li></ul></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Non-structured_programming\" title=\"Non-structured programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Non-structured</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Structured_programming\" title=\"Structured programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Structured</a>)<ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Array_programming\" title=\"Array programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Array</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Nondeterministic_programming\" title=\"Nondeterministic programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Nondeterministic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Parallel_computing\" title=\"Parallel computing\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Parallel computing</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Process-oriented_programming\" title=\"Process-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Process-oriented</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Tacit_programming\" title=\"Tacit programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Point-free style</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concatenative_programming_language\" title=\"Concatenative programming language\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concatenative</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Semantic-oriented_programming\" title=\"Semantic-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Semantic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Structured_programming\" title=\"Structured programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Structured</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Non-structured_programming\" title=\"Non-structured programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Non-structured</a>)<ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Block_(programming)\" title=\"Block (programming)\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Block-structured</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Modular_programming\" title=\"Modular programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Modular</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Monolithic_application\" title=\"Monolithic application\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Monolithic</a>)</li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" title=\"Object-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Object-oriented (OOP)</a><ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Class-based_programming\" title=\"Class-based programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Class-based</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming\" title=\"Concurrent object-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concurrent</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Prototype-based_programming\" title=\"Prototype-based programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Prototype-based</a></li><li style=\"margin-bottom: 0.1em;\">By&nbsp;<a href=\"https://en.wikipedia.org/wiki/Separation_of_concerns\" title=\"Separation of concerns\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">separation of concerns</a>:<ul style=\"list-style-type: disc; margin-top: 0.3em; margin-left: 1.6em; list-style-image: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A);\"><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Aspect-oriented_programming\" title=\"Aspect-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Aspect-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Role-oriented_programming\" title=\"Role-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Role-oriented</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Subject-oriented_programming\" title=\"Subject-oriented programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Subject-oriented</a></li></ul></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Recursion_(computer_science)\" title=\"Recursion (computer science)\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Recursive</a></li></ul></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Value-level_programming\" title=\"Value-level programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Value-level</a>&nbsp;(contrast:&nbsp;<a href=\"https://en.wikipedia.org/wiki/Function-level_programming\" title=\"Function-level programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Function-level</a>)</li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Probabilistic_programming_language\" title=\"Probabilistic programming language\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Probabilistic</a></li><li style=\"margin-bottom: 0.1em;\"><a href=\"https://en.wikipedia.org/wiki/Concept_programming\" title=\"Concept programming\" style=\"color: rgb(11, 0, 128); white-space: nowrap; background: none;\">Concept</a></li></ul></td></tr><tr></tr></tbody></table>"
                },
                "style": {},
                "collapsed": true
              }
            },
            "6": {
              "title": "Data Structure and Algorithms",
              "id": 439,
              "attr": {
                "style": {},
                "collapsed": true
              },
              "ideas": {
                "1": {
                  "title": "https://drive.google.com/open?id=0B9tPYCpuqoIrUXp6aGN1UmotUFE",
                  "id": 443
                }
              }
            },
            "7": {
              "title": "Reflection",
              "id": 444,
              "ideas": {
                "1": {
                  "title": "Allows checking types at runtime",
                  "id": 445
                },
                "2": {
                  "title": "Like fun.apply in javascript",
                  "id": 446
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "8": {
              "title": "Depedendency injection",
              "id": 448,
              "attr": {
                "style": {}
              }
            },
            "9": {
              "title": "Imperative vs. functional",
              "id": 449,
              "ideas": {},
              "attr": {
                "attachment": {
                  "contentType": "text/html",
                  "content": "There seems to be a rift between the two communities due to the fact that imperative tells the computer instruction by instruction what to do (making it hard to abstract, because it's not always applicable in the many scenarios we run into). We also tell the computer how to store things in variables.<div><br></div><div>Are you starting to see a pattern?</div><div>we are always micro optamizing in imperative. Which is sometimes good in very specific scenarios (low level operations)</div><div><br><div>How do imperative programmers do that?</div><div>let's look at this example first:</div><div>list = [1,2,3];</div><div>for(i=0;i&lt;list.length;i++){</div><div>list[i] += 1;</div><div>}</div><div><br></div><div>vs. functional programming:</div><div>list.map((item)=&gt;{</div><div>return item + 1;</div><div>})</div><div><br></div><div>we are telling the computer step by step what to do.</div><div><br><div><br></div><div>On the functional programming side uses the computer to do the hard mental tasks which makes it faster, but not maintainable, because the computer's behavior can't be predicted.</div></div></div>"
                },
                "style": {}
              }
            },
            "10": {
              "title": "General Problems and Solutions",
              "id": 452,
              "ideas": {
                "1": {
                  "title": "Imperative",
                  "id": 453,
                  "ideas": {
                    "1": {
                      "title": "Array",
                      "id": 455,
                      "ideas": {
                        "1": {
                          "title": "Reverse",
                          "id": 456,
                          "attr": {
                            "attachment": {
                              "contentType": "text/html",
                              "content": "void reverse( ){<div>arr = [];<br><div>for(int i=0;i&lt;array.length/2;i++){</div><div><div>other = arr.length-i-1;</div><div>temp = arr[i];</div><div>arr[i] = arr[other];</div><div>arr[other] = temp;</div></div><div><div>}<br><div>}</div></div></div></div>"
                            },
                            "style": {}
                          }
                        }
                      }
                    },
                    "2": {
                      "title": "Count the number of integer pairs in an array that have a difference k",
                      "id": 503,
                      "attr": {
                        "style": {}
                      },
                      "ideas": {
                        "1": {
                          "title": "Solution",
                          "id": 505,
                          "attr": {
                            "attachment": {
                              "contentType": "text/html",
                              "content": "arr = [3,7,9,10,14]<div>numberOfPairsWithDifferenceK(arr){</div><div>//general solution is to go through each item and compare it to the rest of the elements</div><div>//another way is to sort the array first, then do a binary search to compare pairs which would make it (log N) complexity instead of O(N ^ 2)</div><div>}</div>"
                            },
                            "style": {}
                          }
                        }
                      }
                    },
                    "3": {
                      "title": "All possible solutions to a^3 + b^3 = c^3 + d^3",
                      "id": 506,
                      "ideas": {
                        "1": {
                          "title": "Solution",
                          "id": 508,
                          "attr": {
                            "style": {}
                          },
                          "ideas": {
                            "1": {
                              "title": "Read cracking the coding interview",
                              "id": 509,
                              "ideas": {
                                "1": {
                                  "title": "Page 68 for a detailed list of possible solutions",
                                  "id": 510
                                }
                              }
                            }
                          }
                        }
                      },
                      "attr": {
                        "style": {},
                        "collapsed": true
                      }
                    }
                  },
                  "attr": {
                    "style": {},
                    "collapsed": true
                  }
                },
                "2": {
                  "title": "Functional",
                  "id": 454
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "13": {
              "title": "Bit Manipulation",
              "id": 474,
              "attr": {
                "style": {}
              }
            },
            "14": {
              "title": "Memory (Stack vs. Heap)",
              "id": 475,
              "ideas": {},
              "attr": {
                "style": {}
              }
            },
            "15": {
              "title": "Recursion",
              "id": 478,
              "attr": {
                "style": {}
              }
            },
            "16": {
              "title": "Dynamic Programming",
              "id": 479,
              "attr": {
                "style": {}
              }
            },
            "17": {
              "title": "BIg O Time & Space",
              "id": 480,
              "attr": {
                "style": {}
              }
            },
            "18": {
              "title": "State Machines",
              "id": 511,
              "ideas": {
                "3": {
                  "title": "Resources",
                  "id": 515,
                  "ideas": {
                    "2": {
                      "title": "An api built with better state machines",
                      "id": 512,
                      "attr": {
                        "style": {}
                      },
                      "ideas": {
                        "1": {
                          "title": "https://eb.host.cs.st-andrews.ac.uk/drafts/states-all-the-way.pdf",
                          "id": 513,
                          "ideas": {},
                          "attr": {
                            "style": {}
                          }
                        }
                      }
                    }
                  }
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "19": {
              "title": "Evaluation",
              "id": 528,
              "ideas": {
                "1": {
                  "title": "Lazy",
                  "id": 529
                },
                "2": {
                  "title": "Strict",
                  "id": 530
                },
                "3": {
                  "title": "How programs evaluate arguments to funcitons",
                  "id": 531
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "20": {
              "title": "System Design Principles",
              "id": "542.151fa0029b7443e4",
              "ideas": {
                "1": {
                  "title": "https://github.com/donnemartin/system-design-primer/blob/master/README.md",
                  "id": "543.151fa0029b7443e4"
                }
              }
            },
            "21": {
              "title": "Authentication mechanisms",
              "id": "544.151fa0029b7443e4",
              "ideas": {
                "1": {
                  "title": "https://github.com/teesloane/Auth-Boss/blob/master/README.md",
                  "id": "545.151fa0029b7443e4"
                }
              }
            }
          },
          "attr": {
            "style": {}
          }
        },
        "-4.5": {
          "title": "Resources",
          "id": 407,
          "ideas": {
            "2": {
              "title": "Basics",
              "id": 180,
              "attr": {
                "attachment": {
                  "contentType": "text/html",
                  "content": "Variables, types, operators/ flow control (and, or,if,else...)<div>, loops, functions</div><div><br><div>error handling, objects, classes, interface, inheritance</div></div>"
                },
                "style": {},
                "collapsed": true
              },
              "ideas": {
                "1": {
                  "title": "Wikiversity Courses",
                  "id": 285,
                  "attr": {
                    "style": {},
                    "collapsed": true
                  },
                  "ideas": {
                    "1": {
                      "title": "https://en.wikiversity.org/wiki/Introduction_to_Programming",
                      "id": 286,
                      "ideas": {
                        "2": {
                          "title": "https://en.wikiversity.org/wiki/Introduction_to_Algorithms",
                          "id": 288,
                          "ideas": {
                            "1": {
                              "title": "https://en.wikiversity.org/wiki/Programming_Logic",
                              "id": 287,
                              "attr": {
                                "style": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "2": {
                  "title": "http://www.tutorialspoint.com/computer_programming/",
                  "id": 294,
                  "ideas": {
                    "1": {
                      "title": "Tutorials Point",
                      "id": 295
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                },
                "3": {
                  "title": "https://en.m.wikipedia.org/wiki/Computer_programming",
                  "id": 296,
                  "ideas": {
                    "1": {
                      "title": "Wikipedia intro to computer programming",
                      "id": 297
                    }
                  },
                  "attr": {
                    "collapsed": true,
                    "style": {}
                  }
                },
                "4": {
                  "title": "https://www.edx.org/course/introduction-computer-science-harvardx-cs50x",
                  "id": 336
                },
                "5": {
                  "title": "http://www.learnhowtobecome.org/computer-programmer/",
                  "id": 337,
                  "ideas": {
                    "1": {
                      "title": "How to Become a programmer",
                      "id": 338
                    }
                  },
                  "attr": {
                    "style": {},
                    "collapsed": true
                  }
                }
              }
            },
            "4": {
              "title": "Learn many languages",
              "id": 420,
              "ideas": {
                "1": {
                  "title": "https://learnxinyminutes.com/",
                  "id": 421
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "9": {
              "title": "Skills",
              "id": 203,
              "ideas": {
                "1": {
                  "title": "Pattern Recognition",
                  "id": 204,
                  "ideas": {},
                  "attr": {
                    "attachment": {
                      "contentType": "text/html",
                      "content": "recognizing errors<div>recognizing a pattern in a program and how it runs</div>"
                    },
                    "style": {}
                  }
                },
                "2": {
                  "title": "building blocks",
                  "id": 206,
                  "ideas": {},
                  "attr": {
                    "attachment": {
                      "contentType": "text/html",
                      "content": "Knowing the architecture of software and how to build off of blocks"
                    },
                    "style": {}
                  }
                },
                "3": {
                  "title": "Experimentation/ be creative",
                  "id": 208
                },
                "4": {
                  "title": "Learning From others",
                  "id": 209
                },
                "5": {
                  "title": "logic/ problem solving",
                  "id": 210
                },
                "6": {
                  "title": "Learning from mistakes",
                  "id": 211
                },
                "7": {
                  "title": "Self Teaching",
                  "id": 212
                },
                "9": {
                  "title": "Naming Things/ Conveying complex metaphysical concepts",
                  "id": 214
                }
              },
              "attr": {
                "attachment": {
                  "contentType": "text/html",
                  "content": "General skills that help you as a programmer"
                },
                "style": {},
                "collapsed": true
              }
            },
            "11": {
              "title": "Experimentation",
              "id": 437,
              "ideas": {
                "1": {
                  "title": "Tree Talk",
                  "id": 318,
                  "ideas": {
                    "1": {
                      "title": "https://github.com/rlt3/tree-talk",
                      "id": 319
                    }
                  },
                  "attr": {
                    "style": {}
                  }
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "12": {
              "title": "third party",
              "id": 416,
              "attr": {
                "style": {},
                "collapsed": true
              },
              "ideas": {
                "1": {
                  "title": "Editors",
                  "id": 345,
                  "ideas": {
                    "1": {
                      "title": "Vim",
                      "id": 346,
                      "ideas": {
                        "1": {
                          "title": "https://drive.google.com/open?id=0B9tPYCpuqoIrMVBMd1J3RTJ4WEU",
                          "id": 347
                        }
                      }
                    },
                    "2": {
                      "title": "nuclide",
                      "id": "532.d14445a71aa9edc",
                      "ideas": {
                        "1": {
                          "title": "https://nuclide.io/",
                          "id": "533.d14445a71aa9edc"
                        }
                      }
                    }
                  },
                  "attr": {
                    "style": {}
                  }
                }
              }
            },
            "13": {
              "title": "Books",
              "id": 482,
              "ideas": {
                "1": {
                  "title": "Cracking the coding Interview",
                  "id": 484,
                  "ideas": {
                    "1": {
                      "title": "Chapter 6",
                      "id": 487,
                      "ideas": {
                        "1": {
                          "title": "Technical Questions",
                          "id": 488,
                          "ideas": {
                            "1": {
                              "title": "Always get a brute force solution",
                              "id": 489,
                              "ideas": {
                                "1": {
                                  "title": "Don't worry about sounding stupid or that the potential solution is abvious",
                                  "id": 495
                                }
                              }
                            },
                            "2": {
                              "title": "Talk about your solution",
                              "id": 490
                            },
                            "3": {
                              "title": "Optamize",
                              "id": 491,
                              "ideas": {
                                "1": {
                                  "title": "Look back at what the interviewer said and try to find more effecient solution",
                                  "id": 496,
                                  "ideas": {
                                    "1": {
                                      "title": "Example",
                                      "id": 497,
                                      "ideas": {
                                        "1": {
                                          "title": "the array is already sorted, how can we increase effeciency ",
                                          "id": 498
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "4": {
                              "title": "Test your answer for possible test cases",
                              "id": 492
                            },
                            "5": {
                              "title": "Record solutions for previous problems you solved",
                              "id": 494
                            },
                            "6": {
                              "title": "Make time vs state tradeoff",
                              "id": 499,
                              "ideas": {
                                "1": {
                                  "title": "if storing state helps",
                                  "id": 500,
                                  "ideas": {
                                    "1": {
                                      "title": "FP programmers would flip out if they saw this!",
                                      "id": 501
                                    }
                                  }
                                }
                              }
                            },
                            "7": {
                              "title": "Stop and think all the time before you start writing",
                              "id": 502
                            }
                          },
                          "attr": {
                            "style": {},
                            "collapsed": true
                          }
                        }
                      },
                      "attr": {
                        "collapsed": true,
                        "style": {}
                      }
                    }
                  },
                  "attr": {
                    "style": {},
                    "collapsed": true
                  }
                },
                "3": {
                  "title": "Meta",
                  "id": 523,
                  "attr": {
                    "style": {},
                    "collapsed": true
                  },
                  "ideas": {
                    "1": {
                      "title": "http://danluu.com/programming-books/",
                      "id": 522,
                      "ideas": {},
                      "attr": {
                        "style": {}
                      }
                    },
                    "2": {
                      "title": "functional programming book",
                      "id": 526,
                      "ideas": {
                        "1": {
                          "title": "https://www.cs.cmu.edu/~rwh/theses/okasaki.pdf",
                          "id": 527
                        }
                      }
                    }
                  }
                },
                "4": {
                  "title": "Some guy's faviorate programming books",
                  "id": "538.5f5053f6ba277ae2",
                  "ideas": {
                    "1": {
                      "title": "http://www.philipotoole.com/some-favourite-programming-books/",
                      "id": "539.5f5053f6ba277ae2"
                    }
                  }
                }
              },
              "attr": {
                "style": {},
                "collapsed": true
              }
            },
            "14": {
              "title": "Find an open source project to contribute to",
              "id": 517,
              "ideas": {
                "1": {
                  "title": "http://findanopensourceproject.com/",
                  "id": 518
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "15": {
              "title": "Share your own code",
              "id": 524,
              "ideas": {
                "1": {
                  "title": "https://www.codemade.io/",
                  "id": 525
                }
              },
              "attr": {
                "collapsed": true,
                "style": {}
              }
            },
            "17": {
              "title": "Tutorials",
              "id": "536.6d7c017d8cdb94b5",
              "ideas": {
                "2": {
                  "title": "Jack and Dexter",
                  "id": "537.6d7c017d8cdb94b5",
                  "ideas": {
                    "1": {
                      "title": "https://github.com/rmitton/goaldis",
                      "id": "534.6d7c017d8cdb94b5",
                      "attr": {}
                    }
                  }
                }
              },
              "attr": {
                "collapsed": true
              }
            },
            "18": {
              "title": "Interview",
              "id": "540.151fa0029b7443e4",
              "ideas": {
                "1": {
                  "title": "https://github.com/kdn251/interviews/blob/master/README.md",
                  "id": "541.151fa0029b7443e4"
                }
              },
              "attr": {
                "collapsed": true
              }
            }
          },
          "attr": {
            "style": {}
          }
        }
      }
    }
  },
  "links": [
    {
      "ideaIdFrom": 93,
      "ideaIdTo": 94,
      "attr": {
        "style": {
          "color": "#FF0000",
          "lineStyle": "dashed"
        }
      }
    },
    {
      "ideaIdFrom": 494,
      "ideaIdTo": 452,
      "attr": {
        "style": {
          "color": "#FF0000",
          "lineStyle": "dashed"
        }
      }
    }
  ],
  "attr": {},
  "title": "Software Development Career"
}